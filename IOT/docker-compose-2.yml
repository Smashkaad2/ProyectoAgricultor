version: '3.8'

services:
  # Servicio de RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: iotuser
      RABBITMQ_DEFAULT_PASS: iotpassword
    ports:
      - "5672:5672"  # Puerto AMQP
      - "15672:15672"  # Puerto de la interfaz web
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Servicio de PostgreSQL
  db2:
    image: postgres:16
    environment:
      POSTGRES_DB: iotbase
      POSTGRES_USER: user2
      POSTGRES_PASSWORD: userpassword2
    ports:
      - "5433:5432"
    volumes:
      - postgres-data-iot:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user2 -d iotbase"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Servicio de PgAdmin
  pgadmin2:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin2@admin2.com
      PGADMIN_DEFAULT_PASSWORD: admin2
    ports:
      - "8081:80"
    depends_on:
      db2:
        condition: service_healthy
    restart: unless-stopped

  # Servicio de la API Quarkus
  sensor-api:
    build:
      context: ./sensor-api
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - "8080:8080"
    environment:
      QUARKUS_PROFILE: prod
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://db2:5432/iotbase
      QUARKUS_DATASOURCE_USERNAME: user2
      QUARKUS_DATASOURCE_PASSWORD: userpassword2
      QUARKUS_RABBITMQ_HOST: rabbitmq
      QUARKUS_RABBITMQ_PORT: 5672
      QUARKUS_RABBITMQ_USERNAME: iotuser
      QUARKUS_RABBITMQ_PASSWORD: iotpassword
    depends_on:
      db2:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres-data-iot: